<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>CURP on Fischer&#39;s Blog</title>
    <link>https://fischer0522.github.io/en/posts/tech/curp/</link>
    <description>Recent content in CURP on Fischer&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 03 Jun 2024 09:31:59 +0000</lastBuildDate>
    <atom:link href="https://fischer0522.github.io/en/posts/tech/curp/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>02-从0.5实现CURP</title>
      <link>https://fischer0522.github.io/en/posts/tech/curp/%E4%BB%8E0.5%E5%88%B01%E5%AE%9E%E7%8E%B0curp/</link>
      <pubDate>Mon, 03 Jun 2024 09:31:59 +0000</pubDate>
      <guid>https://fischer0522.github.io/en/posts/tech/curp/%E4%BB%8E0.5%E5%88%B01%E5%AE%9E%E7%8E%B0curp/</guid>
      <description>Intro 什么是CURP Curp是一种新的分布式共识算法，curp的提出是针对于跨域等高网络延迟场景，传统的raft和paxos等共识算法需要两个R</description>
    </item>
    <item>
      <title>01-CURP: 共识算法的重新思考</title>
      <link>https://fischer0522.github.io/en/posts/tech/curp/curp-exploiting-commutativity-for-practical-fast-replication/</link>
      <pubDate>Mon, 06 May 2024 09:31:59 +0000</pubDate>
      <guid>https://fischer0522.github.io/en/posts/tech/curp/curp-exploiting-commutativity-for-practical-fast-replication/</guid>
      <description>背景 动机：目前的一些容错算法或者说共识算法，无论是简单的主从结构还是Raft Paxos等，都需要两个RTT来完成，第一个RTT由Client</description>
    </item>
    <item>
      <title>00-Etcd-Raft整体架构</title>
      <link>https://fischer0522.github.io/en/posts/tech/curp/etcd-raft%E6%95%B4%E4%BD%93%E6%9E%B6%E6%9E%84/</link>
      <pubDate>Thu, 02 May 2024 09:31:59 +0000</pubDate>
      <guid>https://fischer0522.github.io/en/posts/tech/curp/etcd-raft%E6%95%B4%E4%BD%93%E6%9E%B6%E6%9E%84/</guid>
      <description>在etcd中，raft作为一个单独的模块被拆分出来，位于etcd的目录下，在新版本当中, etcd/raft被拆分出来，处于一个单独的仓库被e</description>
    </item>
  </channel>
</rss>
